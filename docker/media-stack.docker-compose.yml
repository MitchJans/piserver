---
version: "3.8"

services:

  # home assistant
  # https://docs.linuxserver.io/images/docker-homeassistant
  homeassistant:
    image: linuxserver/homeassistant:latest
    container_name: homeassistant
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
      # https://github.com/linuxserver/docker-mods/tree/homeassistant-hacs
      - DOCKER_MODS=linuxserver/mods:homeassistant-hacs
    volumes:
      - /media/cfg/homeassistant:/config
      - /run/dbus:/run/dbus:ro
    ports:
      - 8484:8123
    # devices:
      # - /path/to/device:/path/to/device #optional
    restart: unless-stopped

  # Plex (this is only here for overseerr to interface with it, it's not used for streaming)
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - /media/cfg/plex:/config
      - /media/nas/tvshows:/tv
      - /media/nas/movies:/movies
    restart: unless-stopped


  # Overseerr
  overseerr:
    image: linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - TZ=Europe/Brussels
      - PUID=1000
      - PGID=1000
    volumes:
      - /media/cfg/overseerr:/config
      # - /media/nas:/media
    ports:
      - 5050:5055

  # Cloudflare protection bypasser
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Brussels
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped

  # Download client
  # https://docs.linuxserver.io/images/docker-transmission
  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
      - TRANSMISSION_WEB_HOME= #optional
      - USER=admin #optional
      - PASS= #optional
      - WHITELIST= #optional
      - PEERPORT= #optional
      - HOST_WHITELIST= #optional
      - DOCKER_MODS=linuxserver/mods:transmission-floodui
    volumes:
      - /media/cfg/transmission:/config
      - /media/nas:/media
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

  # Indexer manager 
  # https://github.com/linuxserver/docker-prowlarr
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    depends_on:
      - transmission
    restart: unless-stopped
    ports:
      - "9696:9696"
    cap_add:
      - NET_ADMIN
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Brussels
    volumes:
      - /media/cfg/prowlarr:/config

  # Movies
  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    depends_on:
      - transmission
      - prowlarr
    restart: unless-stopped
    ports:
      - "7878:7878"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Brussels
    volumes:
      # Radarr's internal config (and backups)
      - /media/cfg/radarr:/config
      # data directory
      - /media/nas:/media

  # TV Shows
  # https://github.com/linuxserver/docker-sonarr
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    depends_on:
      - transmission
      - prowlarr
    restart: unless-stopped
    ports:
      - "8989:8989"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Brussels
    volumes:
      # Sonarr's internal config (and backups)
      - /media/cfg/sonarr:/config
      # data directory
      - /media/nas:/media

  # https://recyclarr.dev/wiki/installation/docker/
  # TODO edit config in /media/cfg/recyclarr/recyclarr.yaml
  # automatically synchronize recommended settings from the TRaSH guides to sonarr/radarr
  # recyclarr:
  #   image: ghcr.io/recyclarr/recyclarr
  #   container_name: recyclarr
  #   user: 1000:1000
  #   volumes:
  #     - /media/cfg/recyclarr:/config
  #   environment:
  #     - TZ=Europe/Brussels
  #     - RECYCLARR_CREATE_CONFIG=true

  # Subtitles
  # https://docs.linuxserver.io/images/docker-bazarr
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    depends_on:
      - transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
    volumes:
      # Bazarr's internal config (and backups)
      - /media/cfg/bazarr:/config
      # data directory
      - /media/nas:/media
    ports:
      - 6767:6767
    restart: unless-stopped

  # Music
  # https://docs.linuxserver.io/images/docker-lidarr
  # lidarr:
  #   image: lscr.io/linuxserver/lidarr:latest
  #   container_name: lidarr
  #   depends_on:
  #     - transmission
  #     - prowlarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Brussels
  #   volumes:
  #     # Lidarr's internal config (and backups)
  #     - /media/cfg/lidarr:/config
  #     - /media/nas:/media
  #   ports:
  #     - 8686:8686
  #   restart: unless-stopped

  # Comics
  # https://docs.linuxserver.io/images/docker-mylar3
  # mylar3:
  #   image: lscr.io/linuxserver/mylar3:latest
  #   container_name: mylar3
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Brussels
  #   volumes:
  #     - /media/cfg/mylar3:/config
  #     - /media/nas:/media
  #   ports:
  #     - 6868:8090
  #   restart: unless-stopped
