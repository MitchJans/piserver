---
version: "3.8"

services:
  ## Tunnel on Cloudlfare Zero Trust deleted, not used anymore
  # cloudflared tunnel for exposing service to the webs
  # tunnel:
  #   image: cloudflare/cloudflared:latest
  #   container_name: cloudflared
  #   command: tunnel --no-autoupdate run
  #   restart: unless-stopped
  #   environment:
  #     # Needs to be set in env file or on host (portainer)
  #     - TUNNEL_TOKEN=${TUNNEL_TOKEN}
  #   depends_on:
  #     # TODO add rest of services?
  #     - radarr

  # https://www.linuxserver.io/blog/zero-trust-hosting-and-reverse-proxy-via-cloudflare-swag-and-authelia
  # This service will be used to expose some other services to the web
  # It will use cloudflare credentials to set up a zero trust tunnel and proxy requests
  # to other services by their service name as subdomains of URL.
  # swag:
  #   image: lscr.io/linuxserver/swag
  #   container_name: swag
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Brussels
  #     - URL=infiniteh.dev
  #     - VALIDATION=dns
  #     - SUBDOMAINS=wildcard
  #     - DNSPLUGIN=cloudflare
  #     - EMAIL=${SWAG_EMAIL}
  #     # MODS explanation
  #     #  swag-auto-proxy: automatically discover local services and enable reverse proxies
  #     #  universal-docker: installs docker-cli that is needed for auto-proxy's service discovery
  #     #  universal-cloudflared: installs the cloudflared service within SWAG
  #     - DOCKER_MODS=linuxserver/mods:swag-auto-proxy|linuxserver/mods:universal-docker|linuxserver/mods:universal-cloudflared
  #     - DOCKER_HOST=dockerproxy
  #     # Cloudflare credentials
  #     - CF_ZONE_ID=${CF_ZONE_ID}
  #     - CF_ACCOUNT_ID=${CF_ACCOUNT_ID}
  #     - CF_API_TOKEN=${CF_API_TOKEN}
  #     # This tunnel will be created by the cloudflared service within SWAG
  #     - CF_TUNNEL_NAME=${CF_TUNNEL_NAME}
  #     - CF_TUNNEL_PASSWORD=${CF_TUNNEL_PASSWORD}
  #     # The file needs to be created on the host
  #     - FILE__CF_TUNNEL_CONFIG=/config/tunnelconfig.yml
  #     # Whether or not to use the letsencrypt staging environment
  #     - STAGING=${SWAG_USE_STAGING}
  #   # extra_hosts: infiniteh.dev:127.0.0.1: sets a dns hosts entry inside the container 
  #   # for our domain so that inside the container our domain resolves to 127.0.0.1 and 
  #   # the ssl cert remains valid
  #   extra_hosts:
  #     - infiniteh.dev:127.0.0.1
  #   volumes:
  #     - /media/cfg/swag:/config
  #   restart: unless-stopped

  # dockerproxy:
  #   image: ghcr.io/tecnativa/docker-socket-proxy
  #   container_name: dockerproxy
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   environment:
  #     - CONTAINERS=1
  #     - POST=0
  #   restart: unless-stopped

  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
    volumes:
      - /mnt/cfg/mylar3:/config
      - /media/nas/comics:/comics
      - /media/nas/downloads:/downloads
    ports:
      - 6868:8090
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
      - TRANSMISSION_WEB_HOME= #optional
      - USER=admin #optional
      - PASS= #optional
      - WHITELIST= #optional
      - PEERPORT= #optional
      - HOST_WHITELIST= #optional
      - DOCKER_MODS=linuxserver/mods:transmission-floodui
    volumes:
      - /media/cfg/transmission:/config
      - /media/nas/downloads:/downloads
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

      # https://github.com/linuxserver/docker-prowlarr
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    depends_on:
      - transmission
    restart: unless-stopped
    ports:
      - "9696:9696"
    cap_add:
      - NET_ADMIN
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Brussels
    volumes:
      - /media/cfg/prowlarr:/config
      # - /media/downloads/watch:/downloads  # transmission watch directory

  # https://github.com/linuxserver/docker-radarr
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    depends_on:
      - transmission
      - prowlarr
    restart: unless-stopped
    ports:
      - "7878:7878"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Brussels
    volumes:
      - /media/cfg/radarr:/config
      - /media/nas/movies:/movies
      - /media/nas/downloads:/downloads
    labels:
      - swag=enable

  # https://github.com/linuxserver/docker-sonarr
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    depends_on:
      - transmission
      - prowlarr
    restart: unless-stopped
    ports:
      - "8989:8989"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Brussels
    volumes:
      - /media/cfg/sonarr:/config
      - /media/nas/tvshows:/tv
      - /media/nas/downloads:/downloads
